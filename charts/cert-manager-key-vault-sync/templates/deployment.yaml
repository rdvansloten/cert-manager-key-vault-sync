apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-key-vault-sync
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cert-manager-key-vault-sync
    app.kubernetes.io/instance: cert-manager-key-vault-sync
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager-key-vault-sync
      app.kubernetes.io/instance: cert-manager-key-vault-sync
  template:
    metadata:
      labels:
        azure.workload.identity/use: "true"
        app.kubernetes.io/name: cert-manager-key-vault-sync
        app.kubernetes.io/instance: cert-manager-key-vault-sync
    spec:
      serviceAccountName: cert-manager-key-vault-sync
      containers:
        - name: cert-manager-key-vault-sync
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: metrics
              containerPort: 8000
              protocol: TCP
          env:
            - name: CERT_NAME_FILTER
              value: "{{ .Values.certificates.filter | default "*" }}"
            - name: AZURE_KEY_VAULT_NAME
              value: {{ .Values.azure.keyVaultName }}
            - name: CHECK_INTERVAL
              value: "{{ .Values.certificates.checkInterval | default 300 }}"
            - name: "ANNOTATION"
              value: "{{ .Values.certificates.annotation | default "cert-manager.io/certificate-name" }}"
            - name: USE_NAMESPACES
              value: "{{ .Values.certificates.useNamespaces | default "false" }}"
            - name: DEFAULT_LOGGING_LEVEL
              value: "{{ .Values.loggingLevels.default | default "INFO" | upper }}"
            - name: AZURE_LOGGING_LEVEL
              value: "{{ .Values.loggingLevels.azure | default "WARNING" | upper }}"
            - name: GITHUB_REPO_OWNER
              value: "{{ .Values.versionCheck.github_repository_owner | default "rdvansloten" }}"
            - name: GITHUB_REPO_NAME
              value: "{{ .Values.versionCheck.github_repository_name | default "cert-manager-key-vault-sync" }}"
            - name: VERSION_CHECK_INTERVAL
              value: "{{ .Values.versionCheck.interval | default 86400 }}"
            - name: CHECK_VERSION
              value: "{{ .Values.versionCheck.enabled | default "true" | lower }}"
            {{- if .Values.azure.workloadIdentity.clientSecret }}
            - name: AZURE_CLIENT_ID
              value: "{{ .Values.azure.workloadIdentity.clientId }}"
            - name: AZURE_SUBSCRIPTION_ID
              value: "{{ .Values.azure.workloadIdentity.subscriptionId }}"
            - name: AZURE_TENANT_ID
              value: "{{ .Values.azure.workloadIdentity.tenantId }}"
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.azure.workloadIdentity.clientSecret }}"
                  key: clientSecret
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
