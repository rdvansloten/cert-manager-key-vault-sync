name: Test Helm Chart Deployment

on:
  workflow_run:
    workflows: 
      - Test Docker Image
    types:
      - completed
  workflow_dispatch:
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'charts/**'
  #     - 'app/**'
  #     - 'Dockerfile'

permissions:
  id-token: write
  contents: read

env:
  IMAGE_NAME: cert-manager-key-vault-sync
  REPOSITORY_NAME: rdvansloten
  HELM_REGISTRY_SERVER: registry-1.docker.io

jobs:
  test:
    name: Test Helm Chart on Azure Kubernetes Service
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - uses: jdx/mise-action@v2
      with:
        version: 2025.3.6
        install: true
        cache: true
        experimental: true
        log_level: debug
        working_directory: .

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        sudo az aks install-cli

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.WORKLOAD_IDENTITY_CLIENT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PAT }}

    - name: Log into Helm Registry
      run: | 
        echo "${{ secrets.DOCKER_PAT }}" | helm registry login -u ${{ secrets.DOCKER_USERNAME }} ${{ env.HELM_REGISTRY_SERVER }} --password-stdin
    
    - name: Build Helm chart
      working-directory: ./charts
      run: |
        CHART_VERSION=$(cat ./${{ env.IMAGE_NAME }}/Chart.yaml | grep version | awk '{print $2}')
        helm package ${{ env.IMAGE_NAME }}
    
    - name: End-to-end Helm Chart test
      working-directory: ./test
      env:
        DOCKER_REGISTRY_PASS: ${{ secrets.DOCKER_PAT }}
        DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
      run: |
        go test -v -timeout 60m